inspiration:
- https://abstracta.us/blog/tools/ultimate-list-100-software-testing-quotes/

========

- junior high, playing Assasin's Creed - it crashed
- ???
- our dependance on software - box, laptop, phone, car, lhc
- software is hard - because of the stack
- abstration? that leaks
=====

- disclaimer, info + whoami

==============
after units

- integration / e2e tests - testable apps

---
can we do better:

- property based tests
- stateful property based tests


---

- qa
    - techiniques
        - tdd
        - bdd
        - pair programming

    - type systems
        - asm
        - C
        - python
        - algebraic datatypes - haskell & rust
        - idris - dependant types

    - ???
        - coq / tla+
        - ???

https://www.youtube.com/results?search_query=tla%2B

- temporal logic for proving consensus algorithms
================

- ethics - why do we have still so crappy software?

takeaways:
- make your code testable
- test to speed up the pace
- teach how to test

====
- maybe add some screnshots from testing tools? :D
- Linus case? "Given enough eyes all bugs are shallow"
